@page "/"
@using BlackJack.Classes
<PageTitle>Blackjack</PageTitle>

<h1>Blackjack</h1>

@* Dealer *@
<span class="text-black display-3">Dealer: </span>
@foreach (var card in game.GetDealerCards())
{
    <DisplayCards DisplayCard="card" />
}
<span class="text-black display-3">&nbsp;@game.GetDealerScore()</span>
<br />
@* Player *@

<span class="text-success display-3">Player: </span>
@foreach (var card in game.GetPlayerCards())
{
    <DisplayCards DisplayCard="card" />
}
<span class="text-success display-3">&nbsp;@game.GetPlayerScore()</span>

<div mt-4>
    @if (!game.Stays)
    {
        <button class="btn btn-success text-white text-center" @onclick="(() => game.DealPlayerCard())">Draw Card</button>
        <button class="btn btn-danger text-white text-center" @onclick="game.Stay">Stay</button>

    }
    else
    {
        <button class="btn btn-primary text-white text-center" @onclick="game.NewGame">New Game</button>
    }
</div>
<br />
<button class="btn btn-warning" @onclick="board.ClearScoreboard">Clear Scoreboard</button>
<div class="w-50">
    <table class="table display-6">
        <thead>
            <tr>
                <th class="fw-bold">Player</th>
                <th class="fw-bold">Dealer</th>
                <th class="fw-bold">Winner</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var score in board.Scores)
            {
                <tr>
                    <td>@score.GetPlayerCards() @score.PlayerScore</td>
                    <td>@score.GetDealerCards() @score.DealerScore</td>
                    <td>@score.Winner</td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code{
    Blackjack game = new();
    Scoreboard board = new();

    protected override void OnInitialized()
    {
        game.NewGame();
        game.Subscribe(board.AddScore);
    }
}